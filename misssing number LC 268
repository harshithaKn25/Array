8.FIND THE MISSING NUMBER IN AN ARRAY     	#LC 268
Input: 2  4  0  1
Output: 3
----------------------------------------------------
steps
s1->sort the array (accesnding order)
     0 1 2 4
s2->keep i at 0th index and j at 1
s3->if a[j] is +1 of a[i]
    then j++ and i++
   else
    return a[i]+1 //it returns the missing number
------------------------------------------------------
code
------
int missingNumber(int* a, int n) 
{
    // Sorting the array
    for (int i = 0; i < n - 1; i++)
    {
        for (int j = i + 1; j < n; j++)
        {
            if (a[i] > a[j])
            {
                int temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }

    // Print sorted array (for debugging purposes)
    printf("The sorted array is: ");
    for (int i = 0; i < n; i++)
    {
        printf("%d ", a[i]);
    }
    printf("\n");
    
    // Finding the missing number
    for (int i = 0; i < n - 1;)
    {
        int j = i + 1;
        if (a[j] == a[i] + 1)
        {
            i++;
        }
        else
        {
            printf("The missing element is: %d\n", a[i] + 1);
            return a[i] + 1; // Return the missing number
        }
    }
    
    // If no missing number found in the sequence, return next number
    if (a[0] != 0) // Assuming the sequence starts from 0
    {
        printf("The missing element is: 0\n");
        return 0;
    }
    else
    {
        printf("The missing element is: %d\n", a[n - 1] + 1);
        return a[n - 1] + 1;
    }
}
